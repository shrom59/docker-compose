services:
  unifi-db:
    image: docker.io/mongo:8.0.5-noble
    container_name: unifi-db
    restart: unless-stopped
    networks:
      - proxy
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - MONGO_AUTHSOURCE=${MONGO_AUTHSOURCE}
    volumes:
      - db:/data/db
      - configdb:/data/configdb
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    restart: unless-stopped
    networks:
      - proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_DBNAME=${MONGO_DBNAME}
      - MONGO_AUTHSOURCE=${MONGO_AUTHSOURCE}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
    volumes:
      - config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
    labels:
      traefik.enable: true
      traefik.http.routers.unify.entrypoints: https
      traefik.http.routers.unify.rule: Host("unify.${DOMAIN}")
      traefik.http.routers.unify.service: unify
      traefik.http.services.unify.loadbalancer.server.scheme: https
      traefik.http.services.unify.loadbalancer.server.port: 8443
networks:
  proxy:
    external: true
volumes:
  config:
  db:
  configdb:
